// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        v5.29.3
// source: worker.proto

package rpc

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type InferenceRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Series        string                 `protobuf:"bytes,1,opt,name=series,proto3" json:"series,omitempty"`
	Path          string                 `protobuf:"bytes,2,opt,name=path,proto3" json:"path,omitempty"`
	Model         string                 `protobuf:"bytes,3,opt,name=model,proto3" json:"model,omitempty"`
	Cpu           bool                   `protobuf:"varint,4,opt,name=cpu,proto3" json:"cpu,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *InferenceRequest) Reset() {
	*x = InferenceRequest{}
	mi := &file_worker_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *InferenceRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*InferenceRequest) ProtoMessage() {}

func (x *InferenceRequest) ProtoReflect() protoreflect.Message {
	mi := &file_worker_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use InferenceRequest.ProtoReflect.Descriptor instead.
func (*InferenceRequest) Descriptor() ([]byte, []int) {
	return file_worker_proto_rawDescGZIP(), []int{0}
}

func (x *InferenceRequest) GetSeries() string {
	if x != nil {
		return x.Series
	}
	return ""
}

func (x *InferenceRequest) GetPath() string {
	if x != nil {
		return x.Path
	}
	return ""
}

func (x *InferenceRequest) GetModel() string {
	if x != nil {
		return x.Model
	}
	return ""
}

func (x *InferenceRequest) GetCpu() bool {
	if x != nil {
		return x.Cpu
	}
	return false
}

type InferenceResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Series        string                 `protobuf:"bytes,1,opt,name=series,proto3" json:"series,omitempty"`
	Result        string                 `protobuf:"bytes,2,opt,name=result,proto3" json:"result,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *InferenceResponse) Reset() {
	*x = InferenceResponse{}
	mi := &file_worker_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *InferenceResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*InferenceResponse) ProtoMessage() {}

func (x *InferenceResponse) ProtoReflect() protoreflect.Message {
	mi := &file_worker_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use InferenceResponse.ProtoReflect.Descriptor instead.
func (*InferenceResponse) Descriptor() ([]byte, []int) {
	return file_worker_proto_rawDescGZIP(), []int{1}
}

func (x *InferenceResponse) GetSeries() string {
	if x != nil {
		return x.Series
	}
	return ""
}

func (x *InferenceResponse) GetResult() string {
	if x != nil {
		return x.Result
	}
	return ""
}

var File_worker_proto protoreflect.FileDescriptor

const file_worker_proto_rawDesc = "" +
	"\n" +
	"\fworker.proto\x12\x03rpc\"f\n" +
	"\x10InferenceRequest\x12\x16\n" +
	"\x06series\x18\x01 \x01(\tR\x06series\x12\x12\n" +
	"\x04path\x18\x02 \x01(\tR\x04path\x12\x14\n" +
	"\x05model\x18\x03 \x01(\tR\x05model\x12\x10\n" +
	"\x03cpu\x18\x04 \x01(\bR\x03cpu\"C\n" +
	"\x11InferenceResponse\x12\x16\n" +
	"\x06series\x18\x01 \x01(\tR\x06series\x12\x16\n" +
	"\x06result\x18\x02 \x01(\tR\x06result2B\n" +
	"\x06Worker\x128\n" +
	"\x05Infer\x12\x15.rpc.InferenceRequest\x1a\x16.rpc.InferenceResponse\"\x00B\bZ\x06./;rpcb\x06proto3"

var (
	file_worker_proto_rawDescOnce sync.Once
	file_worker_proto_rawDescData []byte
)

func file_worker_proto_rawDescGZIP() []byte {
	file_worker_proto_rawDescOnce.Do(func() {
		file_worker_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_worker_proto_rawDesc), len(file_worker_proto_rawDesc)))
	})
	return file_worker_proto_rawDescData
}

var file_worker_proto_msgTypes = make([]protoimpl.MessageInfo, 2)
var file_worker_proto_goTypes = []any{
	(*InferenceRequest)(nil),  // 0: rpc.InferenceRequest
	(*InferenceResponse)(nil), // 1: rpc.InferenceResponse
}
var file_worker_proto_depIdxs = []int32{
	0, // 0: rpc.Worker.Infer:input_type -> rpc.InferenceRequest
	1, // 1: rpc.Worker.Infer:output_type -> rpc.InferenceResponse
	1, // [1:2] is the sub-list for method output_type
	0, // [0:1] is the sub-list for method input_type
	0, // [0:0] is the sub-list for extension type_name
	0, // [0:0] is the sub-list for extension extendee
	0, // [0:0] is the sub-list for field type_name
}

func init() { file_worker_proto_init() }
func file_worker_proto_init() {
	if File_worker_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_worker_proto_rawDesc), len(file_worker_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   2,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_worker_proto_goTypes,
		DependencyIndexes: file_worker_proto_depIdxs,
		MessageInfos:      file_worker_proto_msgTypes,
	}.Build()
	File_worker_proto = out.File
	file_worker_proto_goTypes = nil
	file_worker_proto_depIdxs = nil
}
